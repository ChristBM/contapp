{
	"hits": [
		{
			"created_at": "2022-03-01T01:20:55.000Z",
			"title": null,
			"url": null,
			"author": "liquidise",
			"points": null,
			"story_text": null,
			"comment_text": "What a horrifying policy. This may be tone-deaf as Namecheap has many Ukrainian employees, but this policy is antithetical to customer needs in an infrastructure company.\u003cp\u003eThe US has a history entering conflicts i fervently disagree with. Wars and smaller, more targeted attacks. The idea that my business\u0026#x27;s production infrastructure could be at risk because some POTUS drone strikes the wrong wedding is exactly the sort of reactionary policy-making i try to avoid when choosing which companies i associate with my production infrastructure. This general neutrality was a reason i became a Namecheap customer many years ago.\u003cp\u003eI won\u0026#x27;t say that i can empathize at all with those deeply affected by this war. I fully understand people want to use the means at their control to change the tide here. But as a customer, this move scares me.",
			"num_comments": null,
			"story_id": 30504812,
			"story_title": "Namecheap: Russia Service Termination",
			"story_url": null,
			"parent_id": 30504812,
			"created_at_i": 1646097655,
			"_tags": [ "comment", "author_liquidise", "story_30504812" ],
			"objectID": "30507891",
			"_highlightResult": {
				"author": { "value": "liquidise", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "What a horrifying policy. This may be tone-deaf as Namecheap has many Ukrainian employees, but this policy is antithetical to customer needs in an infrastructure company.\u003cp\u003eThe US has a history entering conflicts i fervently disagree with. Wars and smaller, more targeted attacks. The idea that my business's production infrastructure could be at risk because some POTUS drone strikes the wrong wedding is exactly the sort of \u003cem\u003ereactio\u003c/em\u003enary policy-making i try to avoid when choosing which companies i associate with my production infrastructure. This general neutrality was a reason i became a Namecheap customer many years ago.\u003cp\u003eI won't say that i can empathize at all with those deeply affected by this war. I fully understand people want to use the means at their control to change the tide here. But as a customer, this move scares me.",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "Namecheap: Russia Service Termination",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		},
		{
			"created_at": "2022-03-01T00:37:39.000Z",
			"title": null,
			"url": null,
			"author": "kragen",
			"points": null,
			"story_text": null,
			"comment_text": "Flushing out vicious people who are here to launch personal attacks by offering them a target for obviously indefensible personal attacks is indeed trolling, in the sense of \u0026quot;posting something to get a reaction\u0026quot;, but it\u0026#x27;s a kind of trolling that doesn\u0026#x27;t involve cruelty or dishonesty—unlike the responses it gets!  See, for example, \u003ca href=\"https:\u0026#x2F;\u0026#x2F;news.ycombinator.com\u0026#x2F;item?id=30506275\" rel=\"nofollow\"\u003ehttps:\u0026#x2F;\u0026#x2F;news.ycombinator.com\u0026#x2F;item?id=30506275\u003c/a\u003e.",
			"num_comments": null,
			"story_id": 30505219,
			"story_title": "Ask HN: What is the oldest, still supported OS?",
			"story_url": null,
			"parent_id": 30507272,
			"created_at_i": 1646095059,
			"_tags": [ "comment", "author_kragen", "story_30505219" ],
			"objectID": "30507442",
			"_highlightResult": {
				"author": { "value": "kragen", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "Flushing out vicious people who are here to launch personal attacks by offering them a target for obviously indefensible personal attacks is indeed trolling, in the sense of \u0026quot;posting something to get a \u003cem\u003ereactio\u003c/em\u003en\u0026quot;, but it's a kind of trolling that doesn't involve cruelty or dishonesty—unlike the responses it gets!  See, for example, \u003ca href=\"https://news.ycombinator.com/item?id=30506275\" rel=\"nofollow\"\u003ehttps://news.ycombinator.com/item?id=30506275\u003c/a\u003e.",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "Ask HN: What is the oldest, still supported OS?",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		},
		{
			"created_at": "2022-03-01T00:36:50.000Z",
			"title": null,
			"url": null,
			"author": "kristofferR",
			"points": null,
			"story_text": null,
			"comment_text": "What other alternative reaction to the invasion would you suggest?",
			"num_comments": null,
			"story_id": 30504812,
			"story_title": "Namecheap: Russia Service Termination",
			"story_url": null,
			"parent_id": 30506825,
			"created_at_i": 1646095010,
			"_tags": [ "comment", "author_kristofferR", "story_30504812" ],
			"objectID": "30507436",
			"_highlightResult": {
				"author": { "value": "kristofferR", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "What other alternative \u003cem\u003ereactio\u003c/em\u003en to the invasion would you suggest?",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "Namecheap: Russia Service Termination",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		},
		{
			"created_at": "2022-03-01T00:17:14.000Z",
			"title": null,
			"url": null,
			"author": "fernly",
			"points": null,
			"story_text": null,
			"comment_text": "Indeed, came to say the same. Toward the end of the IEEE article it has this:\u003cp\u003e\u0026gt; We’ve also triggered nuclear reactions by pumping deuterium gas through a thin wall of a palladium-silver alloy tubing, and by electrolytically loading palladium with deuterium. In the latter experiment, we’ve detected fast neutrons.\u003cp\u003e\u0026quot;electrolytically loading palladium with deuterium\u0026quot; is very, very similar to the Pons\u0026#x2F;Fleischman setup, which was basically electrolysis with palladium electrodes.",
			"num_comments": null,
			"story_id": 30503111,
			"story_title": "NASA’s new shortcut to fusion power",
			"story_url": "https://spectrum.ieee.org/lattice-confinement-fusion",
			"parent_id": 30503756,
			"created_at_i": 1646093834,
			"_tags": [ "comment", "author_fernly", "story_30503111" ],
			"objectID": "30507209",
			"_highlightResult": {
				"author": { "value": "fernly", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "Indeed, came to say the same. Toward the end of the IEEE article it has this:\u003cp\u003e\u0026gt; We’ve also triggered nuclear \u003cem\u003ereactio\u003c/em\u003ens by pumping deuterium gas through a thin wall of a palladium-silver alloy tubing, and by electrolytically loading palladium with deuterium. In the latter experiment, we’ve detected fast neutrons.\u003cp\u003e\u0026quot;electrolytically loading palladium with deuterium\u0026quot; is very, very similar to the Pons/Fleischman setup, which was basically electrolysis with palladium electrodes.",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "NASA’s new shortcut to fusion power",
					"matchLevel": "none",
					"matchedWords": []
				},
				"story_url": {
					"value": "https://spectrum.ieee.org/lattice-confinement-fusion",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		},
		{
			"created_at": "2022-02-28T23:47:36.000Z",
			"title": null,
			"url": null,
			"author": "dvsfish",
			"points": null,
			"story_text": null,
			"comment_text": "This kind of reaction is exactly why more businesses need to take this approach. It\u0026#x27;s painfully inconvenient for a Russian who has an interest in being able to use the service, and the more this occurs, the less anyone is happy to just sit by.",
			"num_comments": null,
			"story_id": 30504812,
			"story_title": "Namecheap: Russia Service Termination",
			"story_url": null,
			"parent_id": 30506410,
			"created_at_i": 1646092056,
			"_tags": [ "comment", "author_dvsfish", "story_30504812" ],
			"objectID": "30506888",
			"_highlightResult": {
				"author": { "value": "dvsfish", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "This kind of \u003cem\u003ereactio\u003c/em\u003en is exactly why more businesses need to take this approach. It's painfully inconvenient for a Russian who has an interest in being able to use the service, and the more this occurs, the less anyone is happy to just sit by.",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "Namecheap: Russia Service Termination",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		},
		{
			"created_at": "2022-02-28T23:46:10.000Z",
			"title": null,
			"url": null,
			"author": "worik",
			"points": null,
			"story_text": null,
			"comment_text": "One barrel per year per reactor for geological time periods.\u003cp\u003eSo greedy, selfish, and irresponsible.\u003cp\u003eThere is no place on the planet that we can be confidant nuclear waste can be stored for 200,000 years with no monitoring.",
			"num_comments": null,
			"story_id": 30482135,
			"story_title": "Why did renewables become so cheap so fast? (2020)",
			"story_url": "https://ourworldindata.org/cheap-renewables-growth",
			"parent_id": 30488914,
			"created_at_i": 1646091970,
			"_tags": [ "comment", "author_worik", "story_30482135" ],
			"objectID": "30506872",
			"_highlightResult": {
				"author": { "value": "worik", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "One barrel per year per \u003cem\u003ereactor\u003c/em\u003e for geological time periods.\u003cp\u003eSo greedy, selfish, and irresponsible.\u003cp\u003eThere is no place on the planet that we can be confidant nuclear waste can be stored for 200,000 years with no monitoring.",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "Why did renewables become so cheap so fast? (2020)",
					"matchLevel": "none",
					"matchedWords": []
				},
				"story_url": {
					"value": "https://ourworldindata.org/cheap-renewables-growth",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		},
		{
			"created_at": "2022-02-28T23:45:45.000Z",
			"title": null,
			"url": null,
			"author": "breakingcups",
			"points": null,
			"story_text": null,
			"comment_text": "Let me prefix this by saying I\u0026#x27;m not Russian, I have no ties to Russia whatsoever and I strongly oppose Putin\u0026#x27;s actions in Ukraine.\u003cp\u003eThat said, I wonder about the legal ramifications of this move. Namecheap is essentially unilaterally terminating a (probably yearly) contract without the other party being at fault per se. There\u0026#x27;s no legal cause.\u003cp\u003eWill they be refunding the customers they are kicking out? Or will they be keeping the money for services not rendered?\u003cp\u003eAdditionally, giving people only 4 working days to move out, especially in a situation as volatile as this, seems like a bad move. Anyone hosting their life on one of the domains affected (whether they are actually in Russia or mistakenly flagged as it seems happens a lot going by this thread) might not read the message in time. They might be in hospital, jail, without internet or otherwise unable to transfer in the very short time allotted. Again, not just the people Namecheap hopes to target, but also all the people they mistakenly flagged.\u003cp\u003e(And you can bet some disgruntled Russian customer will flood the support system with whitelist requests for all .ru domains currently pointing at Namecheap NS, overloading the support system for the remaining 4 working days until the deadline)\u003cp\u003eI understand that the Namecheap CEO and many of his employees are probably having a strong emotional reaction to the current war in Ukraine which is completely understandable. I fear this will not accomplish what they really desire though. And I don\u0026#x27;t think I\u0026#x27;ll be cheering them on.",
			"num_comments": null,
			"story_id": 30504812,
			"story_title": "Namecheap: Russia Service Termination",
			"story_url": null,
			"parent_id": 30504812,
			"created_at_i": 1646091945,
			"_tags": [ "comment", "author_breakingcups", "story_30504812" ],
			"objectID": "30506865",
			"_highlightResult": {
				"author": { "value": "breakingcups", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "Let me prefix this by saying I'm not Russian, I have no ties to Russia whatsoever and I strongly oppose Putin's actions in Ukraine.\u003cp\u003eThat said, I wonder about the legal ramifications of this move. Namecheap is essentially unilaterally terminating a (probably yearly) contract without the other party being at fault per se. There's no legal cause.\u003cp\u003eWill they be refunding the customers they are kicking out? Or will they be keeping the money for services not rendered?\u003cp\u003eAdditionally, giving people only 4 working days to move out, especially in a situation as volatile as this, seems like a bad move. Anyone hosting their life on one of the domains affected (whether they are actually in Russia or mistakenly flagged as it seems happens a lot going by this thread) might not read the message in time. They might be in hospital, jail, without internet or otherwise unable to transfer in the very short time allotted. Again, not just the people Namecheap hopes to target, but also all the people they mistakenly flagged.\u003cp\u003e(And you can bet some disgruntled Russian customer will flood the support system with whitelist requests for all .ru domains currently pointing at Namecheap NS, overloading the support system for the remaining 4 working days until the deadline)\u003cp\u003eI understand that the Namecheap CEO and many of his employees are probably having a strong emotional \u003cem\u003ereactio\u003c/em\u003en to the current war in Ukraine which is completely understandable. I fear this will not accomplish what they really desire though. And I don't think I'll be cheering them on.",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "Namecheap: Russia Service Termination",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		},
		{
			"created_at": "2022-02-28T23:34:01.000Z",
			"title": null,
			"url": null,
			"author": "230149dsad232jj",
			"points": null,
			"story_text": null,
			"comment_text": "I know you\u0026#x27;re getting a ton of negative reactions here, which is always what happens when a protest or sanction inconveniences someone.\u003cp\u003eI just wanted to voice that I think this is a moral decision and though I am happy with my current registrar, I am going to consider switching to Namecheap, or at least using you guys next time I register a new domain.",
			"num_comments": null,
			"story_id": 30504812,
			"story_title": "Namecheap: Russia Service Termination",
			"story_url": null,
			"parent_id": 30505495,
			"created_at_i": 1646091241,
			"_tags": [ "comment", "author_230149dsad232jj", "story_30504812" ],
			"objectID": "30506744",
			"_highlightResult": {
				"author": {
					"value": "230149dsad232jj",
					"matchLevel": "none",
					"matchedWords": []
				},
				"comment_text": {
					"value": "I know you're getting a ton of negative \u003cem\u003ereactio\u003c/em\u003ens here, which is always what happens when a protest or sanction inconveniences someone.\u003cp\u003eI just wanted to voice that I think this is a moral decision and though I am happy with my current registrar, I am going to consider switching to Namecheap, or at least using you guys next time I register a new domain.",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "Namecheap: Russia Service Termination",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		},
		{
			"created_at": "2022-02-28T23:15:36.000Z",
			"title": null,
			"url": null,
			"author": "justin66",
			"points": null,
			"story_text": null,
			"comment_text": "\u0026gt; The thing that I was interested in is whether or not a helium atom in the Earth‘s atmosphere has a way to be sucked into the fusing layer at some point.\u003cp\u003eIt seems to me there are three possible fates for that helium, and two of them involve being used up by stellar fusion. The helium atoms get somehow pulled into the sun and so eventually get used up in a fusion reaction, the sun expands during its giant phase and envelops the Earth and the helium eventually gets used up in a fusion reaction, or the helium nuclei gets propelled out of the solar system with the solar wind.\u003cp\u003eIt\u0026#x27;d actually be fun to estimate the odds of each option but I honestly have no idea. #3 feels like a long shot.",
			"num_comments": null,
			"story_id": 30500188,
			"story_title": "Ask HN: Single-person creations that have stood the test of time?",
			"story_url": null,
			"parent_id": 30505144,
			"created_at_i": 1646090136,
			"_tags": [ "comment", "author_justin66", "story_30500188" ],
			"objectID": "30506535",
			"_highlightResult": {
				"author": { "value": "justin66", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "\u0026gt; The thing that I was interested in is whether or not a helium atom in the Earth‘s atmosphere has a way to be sucked into the fusing layer at some point.\u003cp\u003eIt seems to me there are three possible fates for that helium, and two of them involve being used up by stellar fusion. The helium atoms get somehow pulled into the sun and so eventually get used up in a fusion \u003cem\u003ereactio\u003c/em\u003en, the sun expands during its giant phase and envelops the Earth and the helium eventually gets used up in a fusion \u003cem\u003ereactio\u003c/em\u003en, or the helium nuclei gets propelled out of the solar system with the solar wind.\u003cp\u003eIt'd actually be fun to estimate the odds of each option but I honestly have no idea. #3 feels like a long shot.",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "Ask HN: Single-person creations that have stood the test of time?",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		},
		{
			"created_at": "2022-02-28T22:54:21.000Z",
			"title": null,
			"url": null,
			"author": "javajosh",
			"points": null,
			"story_text": null,
			"comment_text": "Given SPECTRE and rowhammer, I just don\u0026#x27;t believe that. This gives attackers full degrees of freedom to reactively search for a crack in the process space. With a normal statically compiled decoder, as an attacker you have a certain degree of freedom, but it is far less (unless one of your formats is a programmable environment, e.g. NGO\u0026#x27;s iOS exploit).\u003cp\u003eI, for one, would not be comfortable having content distributed as a blob that runs as a virtual machine that builds the software that decodes the content. Justine has made this practical. I can see the appeal. I just worry that we\u0026#x27;re trading in our jpgs for exes in a sandbox, and I\u0026#x27;m not sure its worth the risk.",
			"num_comments": null,
			"story_id": 30493713,
			"story_title": "Lambda Calculus in 400 Bytes",
			"story_url": "https://justine.lol/lambda/",
			"parent_id": 30502009,
			"created_at_i": 1646088861,
			"_tags": [ "comment", "author_javajosh", "story_30493713" ],
			"objectID": "30506302",
			"_highlightResult": {
				"author": { "value": "javajosh", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "Given SPECTRE and rowhammer, I just don't believe that. This gives attackers full degrees of freedom to \u003cem\u003ereactiv\u003c/em\u003eely search for a crack in the process space. With a normal statically compiled decoder, as an attacker you have a certain degree of freedom, but it is far less (unless one of your formats is a programmable environment, e.g. NGO's iOS exploit).\u003cp\u003eI, for one, would not be comfortable having content distributed as a blob that runs as a virtual machine that builds the software that decodes the content. Justine has made this practical. I can see the appeal. I just worry that we're trading in our jpgs for exes in a sandbox, and I'm not sure its worth the risk.",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "Lambda Calculus in 400 Bytes",
					"matchLevel": "none",
					"matchedWords": []
				},
				"story_url": {
					"value": "https://justine.lol/lambda/",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		},
		{
			"created_at": "2022-02-28T22:38:53.000Z",
			"title": null,
			"url": null,
			"author": "monocasa",
			"points": null,
			"story_text": null,
			"comment_text": "These decisions here are all older than Windows and weren\u0026#x27;t in reaction to them.  It\u0026#x27;s in reaction to the awful mainframe ways to spawn processes like using JCL.\u003cp\u003eWe\u0026#x27;ve sort of come back to that with kubernetes yaml files to describe how to launch an executable in a specific env and all of the resources it needs.  Like it can be traced explicitly, the Borg paper references mainframes and knowingly calls the language that would be replaced by kubernetes\u0026#x27;s yaml files \u0026#x27;BCL\u0026#x27; instead of z\u0026#x2F;OS\u0026#x27;s JCL.",
			"num_comments": null,
			"story_id": 30502392,
			"story_title": "Fork() is evil; vfork() is goodness; afork() would be better; clone() is stupid",
			"story_url": "https://gist.github.com/nicowilliams/a8a07b0fc75df05f684c23c18d7db234",
			"parent_id": 30504623,
			"created_at_i": 1646087933,
			"_tags": [ "comment", "author_monocasa", "story_30502392" ],
			"objectID": "30506148",
			"_highlightResult": {
				"author": { "value": "monocasa", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "These decisions here are all older than Windows and weren't in \u003cem\u003ereactio\u003c/em\u003en to them.  It's in \u003cem\u003ereactio\u003c/em\u003en to the awful mainframe ways to spawn processes like using JCL.\u003cp\u003eWe've sort of come back to that with kubernetes yaml files to describe how to launch an executable in a specific env and all of the resources it needs.  Like it can be traced explicitly, the Borg paper references mainframes and knowingly calls the language that would be replaced by kubernetes's yaml files 'BCL' instead of z/OS's JCL.",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "Fork() is evil; vfork() is goodness; afork() would be better; clone() is stupid",
					"matchLevel": "none",
					"matchedWords": []
				},
				"story_url": {
					"value": "https://gist.github.com/nicowilliams/a8a07b0fc75df05f684c23c18d7db234",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		},
		{
			"created_at": "2022-02-28T22:33:43.000Z",
			"title": null,
			"url": null,
			"author": "monocasa",
			"points": null,
			"story_text": null,
			"comment_text": "Hard disagree to most of this.\u003cp\u003efork(2) makes a lot more sense when you realize its heritage.  It came from a land before Unix supported full MMUs.  In this model, to still have per process address spaces and preemptive multitasking on what was essentially a PC-DOS level of hardware, the kernel would checkpoint the memory for a process, slurp it all out to dectape or some such, and load in the memory for whatever the scheduler wanted to run next.  It\u0026#x27;s simplicity of being process checkpoint based wasn\u0026#x27;t a reaction to windows style calls (which wouldn\u0026#x27;t exist for almost a couple decades), but instead mainframe process spawning abominations like JCL.  The idea \u0026quot;you probably want most of what you have so force a checkpoint, copy the checkpoint into a new slot, and continue separately from both checkpoints\u0026quot; was soooo much better than JCL and it\u0026#x27;s tomes of incantations to do just about anything.\u003cp\u003evfork(2) is an abomination.  Even when the child returns, the parent now has a heavily modified stack if the child didn\u0026#x27;t immediately exec().  All of those bugs that causes are super fun to chase, lemme tell you.  AFAIC, about the only valid use for vfork now is nommu systems where fork() incredibly expensive compared to what is generally expected.\u003cp\u003eclone(2) is great.  Start from a checkpoint like fork, but instead of semantically copying everything, optionally share or not based on a bitmask.  Share a tgid, virtual address space, and FD table?  You just made a thread.  Share nothing?  You just made a process.  It\u0026#x27;s the most \u0026#x27;mechanism, not policy\u0026#x27; way I\u0026#x27;ve seen to do context creation outside of maybe the l4 variants and the exokernels.  This isn\u0026#x27;t an old holdover, this is how threads work today, processes spawned that happen to share resources.  Modern archs on linux don\u0026#x27;t even have a fork(2) syscall; it all happens through clone(2).  Even vfork is clone set to share virtual address space and nothing else that fork wouldn\u0026#x27;t share.  Namespaces are a way to opt into not sharing resources that normally fork \u003ci\u003ewould\u003c/i\u003e share.\u003cp\u003eAnd I don\u0026#x27;t see what afork gets you that clone doesn\u0026#x27;t, except afork isn\u0026#x27;t as general.",
			"num_comments": null,
			"story_id": 30502392,
			"story_title": "Fork() is evil; vfork() is goodness; afork() would be better; clone() is stupid",
			"story_url": "https://gist.github.com/nicowilliams/a8a07b0fc75df05f684c23c18d7db234",
			"parent_id": 30502392,
			"created_at_i": 1646087623,
			"_tags": [ "comment", "author_monocasa", "story_30502392" ],
			"objectID": "30506096",
			"_highlightResult": {
				"author": { "value": "monocasa", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "Hard disagree to most of this.\u003cp\u003efork(2) makes a lot more sense when you realize its heritage.  It came from a land before Unix supported full MMUs.  In this model, to still have per process address spaces and preemptive multitasking on what was essentially a PC-DOS level of hardware, the kernel would checkpoint the memory for a process, slurp it all out to dectape or some such, and load in the memory for whatever the scheduler wanted to run next.  It's simplicity of being process checkpoint based wasn't a \u003cem\u003ereactio\u003c/em\u003en to windows style calls (which wouldn't exist for almost a couple decades), but instead mainframe process spawning abominations like JCL.  The idea \u0026quot;you probably want most of what you have so force a checkpoint, copy the checkpoint into a new slot, and continue separately from both checkpoints\u0026quot; was soooo much better than JCL and it's tomes of incantations to do just about anything.\u003cp\u003evfork(2) is an abomination.  Even when the child returns, the parent now has a heavily modified stack if the child didn't immediately exec().  All of those bugs that causes are super fun to chase, lemme tell you.  AFAIC, about the only valid use for vfork now is nommu systems where fork() incredibly expensive compared to what is generally expected.\u003cp\u003eclone(2) is great.  Start from a checkpoint like fork, but instead of semantically copying everything, optionally share or not based on a bitmask.  Share a tgid, virtual address space, and FD table?  You just made a thread.  Share nothing?  You just made a process.  It's the most 'mechanism, not policy' way I've seen to do context creation outside of maybe the l4 variants and the exokernels.  This isn't an old holdover, this is how threads work today, processes spawned that happen to share resources.  Modern archs on linux don't even have a fork(2) syscall; it all happens through clone(2).  Even vfork is clone set to share virtual address space and nothing else that fork wouldn't share.  Namespaces are a way to opt into not sharing resources that normally fork \u003ci\u003ewould\u003c/i\u003e share.\u003cp\u003eAnd I don't see what afork gets you that clone doesn't, except afork isn't as general.",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "Fork() is evil; vfork() is goodness; afork() would be better; clone() is stupid",
					"matchLevel": "none",
					"matchedWords": []
				},
				"story_url": {
					"value": "https://gist.github.com/nicowilliams/a8a07b0fc75df05f684c23c18d7db234",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		},
		{
			"created_at": "2022-02-28T22:21:25.000Z",
			"title": null,
			"url": null,
			"author": "adrian_b",
			"points": null,
			"story_text": null,
			"comment_text": "Much the same as room temperature is only the \u003ci\u003eaverage\u003c/i\u003e temperature of the metal.\u003cp\u003eThe few irradiated deuterons and the products of their collisions have speeds (kinetic energies) many millions times higher than those corresponding to the room temperature.\u003cp\u003eThe average temperature remains low only because few nuclei take part in fusion.\u003cp\u003eIf they would succeed to make enough nuclei to take part in fusion reactions to produce more energy than consumed, it is not clear how great the average temperature of the metal would become.\u003cp\u003eIf the temperature of the metal would not increase excessively, that could happen only if most of the energy produced by fusion would be carried away by neutrons, which would be absorbed somewhere else, generating useful heat, but also creating undesirable radioactive waste.\u003cp\u003eThis approach is indeed very promising, but there are many problems that must be solved, so there is still no chance for a fusion reactor in only a few years.",
			"num_comments": null,
			"story_id": 30503111,
			"story_title": "NASA’s new shortcut to fusion power",
			"story_url": "https://spectrum.ieee.org/lattice-confinement-fusion",
			"parent_id": 30504752,
			"created_at_i": 1646086885,
			"_tags": [ "comment", "author_adrian_b", "story_30503111" ],
			"objectID": "30505978",
			"_highlightResult": {
				"author": { "value": "adrian_b", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "Much the same as room temperature is only the \u003ci\u003eaverage\u003c/i\u003e temperature of the metal.\u003cp\u003eThe few irradiated deuterons and the products of their collisions have speeds (kinetic energies) many millions times higher than those corresponding to the room temperature.\u003cp\u003eThe average temperature remains low only because few nuclei take part in fusion.\u003cp\u003eIf they would succeed to make enough nuclei to take part in fusion \u003cem\u003ereactio\u003c/em\u003ens to produce more energy than consumed, it is not clear how great the average temperature of the metal would become.\u003cp\u003eIf the temperature of the metal would not increase excessively, that could happen only if most of the energy produced by fusion would be carried away by neutrons, which would be absorbed somewhere else, generating useful heat, but also creating undesirable radioactive waste.\u003cp\u003eThis approach is indeed very promising, but there are many problems that must be solved, so there is still no chance for a fusion reactor in only a few years.",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "NASA’s new shortcut to fusion power",
					"matchLevel": "none",
					"matchedWords": []
				},
				"story_url": {
					"value": "https://spectrum.ieee.org/lattice-confinement-fusion",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		},
		{
			"created_at": "2022-02-28T22:04:50.000Z",
			"title": null,
			"url": null,
			"author": "imtringued",
			"points": null,
			"story_text": null,
			"comment_text": "I\u0026#x27;ve read a scientific text where the liquidity\u0026#x2F;holding cost of power is \u0026quot;guard labor\u0026quot;, effectively a portion of the population is willing to work for the authoritarian ruler for money but this can only buy so much time. As the country becomes more unstable the need for guard labor increases until it reaches a critical point where the guard labor is powerful enough not only to suppress the rest of the country but also the authoritarian ruler himself leading to a classic military coup.",
			"num_comments": null,
			"story_id": 30501757,
			"story_title": "Russia's financial meltdown and the global dollar system",
			"story_url": "https://adamtooze.substack.com/p/chartbook-89-russias-financial-meltdown",
			"parent_id": 30503986,
			"created_at_i": 1646085890,
			"_tags": [ "comment", "author_imtringued", "story_30501757" ],
			"objectID": "30505801",
			"_highlightResult": {
				"author": { "value": "imtringued", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "I've read a scientific text where the liquidity/holding cost of power is \u0026quot;guard labor\u0026quot;, effectively a portion of the population is willing to work for the authoritarian ruler for money but this can only buy so much time. As the country becomes more unstable the need for guard labor increases until it \u003cem\u003ereaches\u003c/em\u003e a critical point where the guard labor is powerful enough not only to suppress the rest of the country but also the authoritarian ruler himself leading to a classic military coup.",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "Russia's financial meltdown and the global dollar system",
					"matchLevel": "none",
					"matchedWords": []
				},
				"story_url": {
					"value": "https://adamtooze.substack.com/p/chartbook-89-russias-financial-meltdown",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		},
		{
			"created_at": "2022-02-28T21:40:51.000Z",
			"title": null,
			"url": null,
			"author": "aussiegreenie",
			"points": null,
			"story_text": null,
			"comment_text": "China, like every other country acts in its own self interest.  China is\u0026#x2F;was serious about invading Taiwan.  Russia has been one of the few countries that have not taken economic and diplomatic action regarding Chinese aggression.\u003cp\u003eThe scale of Russia\u0026#x27;s actions and the scale of the world\u0026#x27;s reaction have shocked China. Both Xi and Putin have been escolating conflicts for domestic political advantage.  Both may have overplayed their hand and be killed by their own security forces.\u003cp\u003eXi wants the blessing of the 20th CCP congress (ccp 100 year anniversary) for unlimited power but the Jiang Zemin Faction is fighting him tooth and nail.  Xi is not popular within the Party and there even talk of him destroying the CCP.\u003cp\u003eBoth Putin and Xi are using very high risk stratergies and it look like Putin is losing. Will Xi lose as well?",
			"num_comments": null,
			"story_id": 30503337,
			"story_title": "Russia 'Likely' to Default on Debts",
			"story_url": "https://www.reuters.com/article/ukraine-russia-sanctions-iif-idINKBN2KX240",
			"parent_id": 30504295,
			"created_at_i": 1646084451,
			"_tags": [ "comment", "author_aussiegreenie", "story_30503337" ],
			"objectID": "30505509",
			"_highlightResult": {
				"author": { "value": "aussiegreenie", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "China, like every other country acts in its own self interest.  China is/was serious about invading Taiwan.  Russia has been one of the few countries that have not taken economic and diplomatic action regarding Chinese aggression.\u003cp\u003eThe scale of Russia's actions and the scale of the world's \u003cem\u003ereactio\u003c/em\u003en have shocked China. Both Xi and Putin have been escolating conflicts for domestic political advantage.  Both may have overplayed their hand and be killed by their own security forces.\u003cp\u003eXi wants the blessing of the 20th CCP congress (ccp 100 year anniversary) for unlimited power but the Jiang Zemin Faction is fighting him tooth and nail.  Xi is not popular within the Party and there even talk of him destroying the CCP.\u003cp\u003eBoth Putin and Xi are using very high risk stratergies and it look like Putin is losing. Will Xi lose as well?",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "Russia 'Likely' to Default on Debts",
					"matchLevel": "none",
					"matchedWords": []
				},
				"story_url": {
					"value": "https://www.reuters.com/article/ukraine-russia-sanctions-iif-idINKBN2KX240",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		},
		{
			"created_at": "2022-02-28T20:47:01.000Z",
			"title": null,
			"url": null,
			"author": "kimi",
			"points": null,
			"story_text": null,
			"comment_text": "Go have a look at what Elixir is doing with LiveViews ....\u003cp\u003eThe fatal flaw of React is that there are two states - client and server. Very often two different languages. Two different teams. Long and painful build. And in any case, you cannot trust the client. In 99.99% of the use cases - apart from extreme scale and full page renders - a LiveWiev will be more than enough, at 1\u0026#x2F;20 of the complexity and development time.\u003cp\u003eAnd yes, we use React.",
			"num_comments": null,
			"story_id": 30495034,
			"story_title": "Hooks: React’s Do-Notation",
			"story_url": "https://devanshj.me/writings/hooks-reacts-do-notation",
			"parent_id": 30496446,
			"created_at_i": 1646081221,
			"_tags": [ "comment", "author_kimi", "story_30495034" ],
			"objectID": "30504897",
			"_highlightResult": {
				"author": { "value": "kimi", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "Go have a look at what Elixir is doing with LiveViews ....\u003cp\u003eThe fatal flaw of \u003cem\u003eReact\u003c/em\u003e is that there are two states - client and server. Very often two different languages. Two different teams. Long and painful build. And in any case, you cannot trust the client. In 99.99% of the use cases - apart from extreme scale and full page renders - a LiveWiev will be more than enough, at 1/20 of the complexity and development time.\u003cp\u003eAnd yes, we use \u003cem\u003eReact\u003c/em\u003e.",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "Hooks: \u003cem\u003eReact\u003c/em\u003e’s Do-Notation",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_url": {
					"value": "https://devanshj.me/writings/hooks-\u003cem\u003ereact\u003c/em\u003es-do-notation",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				}
			}
		},
		{
			"created_at": "2022-02-28T20:37:33.000Z",
			"title": null,
			"url": null,
			"author": "cryptonector",
			"points": null,
			"story_text": null,
			"comment_text": "In my world we often say things like \u0026quot;X is the moral equivalent of Y\u0026quot; where X and Y are just technologies and, \u003ci\u003eclearly\u003c/i\u003e, are morally-neutral things.\u003cp\u003eWhy do we do this?  Well, because it adds emphasis, and a dash of humor.\u003cp\u003eClearly fork() is neither Good nor Evil.  It\u0026#x27;s morally neutral.  It has no moral value whatsoever.  But to say \u0026quot;fork() is evil\u0026quot; is to cause the audience to raise their eyebrows -\u0026quot;what, why would you say fork() is evil?!\u0026quot;- and maybe pay attention.\u003cp\u003eYes, there is the risk that the audience might react dismissively because fork() obviously is morally-neutral, so any claim that it is \u0026quot;evil\u0026quot; must be vacuous or hyperbolic.  It\u0026#x27;s a risk I chose to take.\u003cp\u003eReally, it\u0026#x27;s a rhetorical device.  I think it\u0026#x27;s pretty standard.  I didn\u0026#x27;t create that device myself -- I\u0026#x27;ve seen it used before and I \u003ci\u003eliked\u003c/i\u003e it.",
			"num_comments": null,
			"story_id": 30502392,
			"story_title": "Fork() is evil; vfork() is goodness; afork() would be better; clone() is stupid",
			"story_url": "https://gist.github.com/nicowilliams/a8a07b0fc75df05f684c23c18d7db234",
			"parent_id": 30503230,
			"created_at_i": 1646080653,
			"_tags": [ "comment", "author_cryptonector", "story_30502392" ],
			"objectID": "30504804",
			"_highlightResult": {
				"author": { "value": "cryptonector", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "In my world we often say things like \u0026quot;X is the moral equivalent of Y\u0026quot; where X and Y are just technologies and, \u003ci\u003eclearly\u003c/i\u003e, are morally-neutral things.\u003cp\u003eWhy do we do this?  Well, because it adds emphasis, and a dash of humor.\u003cp\u003eClearly fork() is neither Good nor Evil.  It's morally neutral.  It has no moral value whatsoever.  But to say \u0026quot;fork() is evil\u0026quot; is to cause the audience to raise their eyebrows -\u0026quot;what, why would you say fork() is evil?!\u0026quot;- and maybe pay attention.\u003cp\u003eYes, there is the risk that the audience might \u003cem\u003ereact\u003c/em\u003e dismissively because fork() obviously is morally-neutral, so any claim that it is \u0026quot;evil\u0026quot; must be vacuous or hyperbolic.  It's a risk I chose to take.\u003cp\u003eReally, it's a rhetorical device.  I think it's pretty standard.  I didn't create that device myself -- I've seen it used before and I \u003ci\u003eliked\u003c/i\u003e it.",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "Fork() is evil; vfork() is goodness; afork() would be better; clone() is stupid",
					"matchLevel": "none",
					"matchedWords": []
				},
				"story_url": {
					"value": "https://gist.github.com/nicowilliams/a8a07b0fc75df05f684c23c18d7db234",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		},
		{
			"created_at": "2022-02-28T20:15:56.000Z",
			"title": null,
			"url": null,
			"author": "jjulius",
			"points": null,
			"story_text": null,
			"comment_text": "I was kind of similar to this person. My dad worked at buffets and within the restaurant industry, but he always managed them - never cooked at them (does one actually ever cook at a buffet?). He prided himself on being the cook of the family but he only really excels at a couple of dishes. My mom\u0026#x27;s a decent enough cook, but just decent enough. Steaks were cooked well, and paired with ketchup.\u003cp\u003eSo, I grew up picky as hell. I\u0026#x27;m 34, and I can still remember my third date with my wife when we were both 21. I ordered a turkey pesto sandwich and said, \u0026quot;with no vegetables\u0026quot;. My then-barely-GF blurted out, \u0026quot;NO VEGETABLES!?\u0026quot; without even thinking about it, which sorta shamed me but not in a way, obviously, that put me off from seeing her again, lol.\u003cp\u003eTurns out her dad loves to cook, and her entire family loves going out to eat. My restaurant experiences were, by and large, limited to Applebee\u0026#x27;s and other crappy chain restaurants up to that point in my life. So, I started giving things chances; I started branching out culturally while still trying to find meat-focused dishes within that cuisine. Eventually, we started eating at nicer restaurants.\u003cp\u003eGoing back to what I said about steaks above, I made it to my mid-20\u0026#x27;s absolutely hating steak. I thought people were idiots for loving it so much. I went to a steakhouse (Kevin Rathbun Steak in ATL) for my SIL\u0026#x27;s birthday one year and avoided the steak because of those misgivings. I opted for the lamb, and chose \u0026quot;rare\u0026quot; when asked how I wanted it cooked because I figured I\u0026#x27;d never had anything rare and I may as well try it. I immediately fell in love, and ended up trying a rare steak a few months later. Now, I\u0026#x27;m all about that 30+-day dry-aged, incredibly well-marbled ribeye!\u003cp\u003eI also forced myself to stop picking everything off. Don\u0026#x27;t like something because of it\u0026#x27;s texture? Try a smaller piece of it and see if you like the taste and how that taste pairs with the rest of the dish. Slowly, things fell into place for me and I began to appreciate more. Then, we moved to the Bay Area and it\u0026#x27;s gigantic concentration of Michelin-level restaurants.\u003cp\u003eMy first Michelin joint had a tasting menu, and I told myself that the food at Michelin restaurants \u003ci\u003eis definitely going to be good\u003c/i\u003e. Whatever is on that plate is going to highlight what makes that ingredient so good, why people like it, etc.. So my mantra was, \u0026quot;just eat it\u0026quot;. Don\u0026#x27;t normally like it? Don\u0026#x27;t care, because if I\u0026#x27;m ever going to have it at it\u0026#x27;s best, \u003ci\u003enow\u003c/i\u003e is the time to see what the fuss is all about.\u003cp\u003eHoly shit did my world change. At this point, I\u0026#x27;ll eat anything. Texture is where I still struggle just a bit, but I\u0026#x27;m keenly aware of what I do and don\u0026#x27;t react to in certain ways. So these foods can\u0026#x27;t be the focus of a dish, but I\u0026#x27;ll never shy away from eating them if their purpose of the dish is more \u0026#x27;complimentary\u0026#x27;, for lack of a better word. Taking this approach has allowed me to teach myself to appreciate the flavor, which then prompts me to eat it again, which gets me used to the texture, and ultimately gets me towards not being bothered so much by it.\u003cp\u003eAll that rambling is to say - YES, I completely understand where your friend is coming from and I have thoroughly enjoyed having a similar experience.",
			"num_comments": null,
			"story_id": 30502098,
			"story_title": "I'm common as muck and spent £150 to try a Michelin star restaurant",
			"story_url": "https://www.birminghammail.co.uk/whats-on/food-drink-news/im-common-muck-spent-150-23194880",
			"parent_id": 30503510,
			"created_at_i": 1646079356,
			"_tags": [ "comment", "author_jjulius", "story_30502098" ],
			"objectID": "30504548",
			"_highlightResult": {
				"author": { "value": "jjulius", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "I was kind of similar to this person. My dad worked at buffets and within the restaurant industry, but he always managed them - never cooked at them (does one actually ever cook at a buffet?). He prided himself on being the cook of the family but he only really excels at a couple of dishes. My mom's a decent enough cook, but just decent enough. Steaks were cooked well, and paired with ketchup.\u003cp\u003eSo, I grew up picky as hell. I'm 34, and I can still remember my third date with my wife when we were both 21. I ordered a turkey pesto sandwich and said, \u0026quot;with no vegetables\u0026quot;. My then-barely-GF blurted out, \u0026quot;NO VEGETABLES!?\u0026quot; without even thinking about it, which sorta shamed me but not in a way, obviously, that put me off from seeing her again, lol.\u003cp\u003eTurns out her dad loves to cook, and her entire family loves going out to eat. My restaurant experiences were, by and large, limited to Applebee's and other crappy chain restaurants up to that point in my life. So, I started giving things chances; I started branching out culturally while still trying to find meat-focused dishes within that cuisine. Eventually, we started eating at nicer restaurants.\u003cp\u003eGoing back to what I said about steaks above, I made it to my mid-20's absolutely hating steak. I thought people were idiots for loving it so much. I went to a steakhouse (Kevin Rathbun Steak in ATL) for my SIL's birthday one year and avoided the steak because of those misgivings. I opted for the lamb, and chose \u0026quot;rare\u0026quot; when asked how I wanted it cooked because I figured I'd never had anything rare and I may as well try it. I immediately fell in love, and ended up trying a rare steak a few months later. Now, I'm all about that 30+-day dry-aged, incredibly well-marbled ribeye!\u003cp\u003eI also forced myself to stop picking everything off. Don't like something because of it's texture? Try a smaller piece of it and see if you like the taste and how that taste pairs with the rest of the dish. Slowly, things fell into place for me and I began to appreciate more. Then, we moved to the Bay Area and it's gigantic concentration of Michelin-level restaurants.\u003cp\u003eMy first Michelin joint had a tasting menu, and I told myself that the food at Michelin restaurants \u003ci\u003eis definitely going to be good\u003c/i\u003e. Whatever is on that plate is going to highlight what makes that ingredient so good, why people like it, etc.. So my mantra was, \u0026quot;just eat it\u0026quot;. Don't normally like it? Don't care, because if I'm ever going to have it at it's best, \u003ci\u003enow\u003c/i\u003e is the time to see what the fuss is all about.\u003cp\u003eHoly shit did my world change. At this point, I'll eat anything. Texture is where I still struggle just a bit, but I'm keenly aware of what I do and don't \u003cem\u003ereact\u003c/em\u003e to in certain ways. So these foods can't be the focus of a dish, but I'll never shy away from eating them if their purpose of the dish is more 'complimentary', for lack of a better word. Taking this approach has allowed me to teach myself to appreciate the flavor, which then prompts me to eat it again, which gets me used to the texture, and ultimately gets me towards not being bothered so much by it.\u003cp\u003eAll that rambling is to say - YES, I completely understand where your friend is coming from and I have thoroughly enjoyed having a similar experience.",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "I'm common as muck and spent £150 to try a Michelin star restaurant",
					"matchLevel": "none",
					"matchedWords": []
				},
				"story_url": {
					"value": "https://www.birminghammail.co.uk/whats-on/food-drink-news/im-common-muck-spent-150-23194880",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		},
		{
			"created_at": "2022-02-28T20:15:18.000Z",
			"title": null,
			"url": null,
			"author": "willis936",
			"points": null,
			"story_text": null,
			"comment_text": "IEC is inertial electrostatic confinement: fusors and polywells.  Conduction through the confinement\u0026#x2F;accelerator coils being immersed in the plasma reduces the confinement time lengths far too short for a reactor.",
			"num_comments": null,
			"story_id": 30503111,
			"story_title": "NASA’s new shortcut to fusion power",
			"story_url": "https://spectrum.ieee.org/lattice-confinement-fusion",
			"parent_id": 30504406,
			"created_at_i": 1646079318,
			"_tags": [ "comment", "author_willis936", "story_30503111" ],
			"objectID": "30504544",
			"_highlightResult": {
				"author": { "value": "willis936", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "IEC is inertial electrostatic confinement: fusors and polywells.  Conduction through the confinement/accelerator coils being immersed in the plasma reduces the confinement time lengths far too short for a \u003cem\u003ereactor\u003c/em\u003e.",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "NASA’s new shortcut to fusion power",
					"matchLevel": "none",
					"matchedWords": []
				},
				"story_url": {
					"value": "https://spectrum.ieee.org/lattice-confinement-fusion",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		},
		{
			"created_at": "2022-02-28T20:11:44.000Z",
			"title": null,
			"url": null,
			"author": "jupp0r",
			"points": null,
			"story_text": null,
			"comment_text": "MERN = MongoDB, Express, React, Node",
			"num_comments": null,
			"story_id": 30504390,
			"story_title": "Building Web Apps (MERN stack) in a matter of minutes for your Startup",
			"story_url": null,
			"parent_id": 30504390,
			"created_at_i": 1646079104,
			"_tags": [ "comment", "author_jupp0r", "story_30504390" ],
			"objectID": "30504501",
			"_highlightResult": {
				"author": { "value": "jupp0r", "matchLevel": "none", "matchedWords": [] },
				"comment_text": {
					"value": "MERN = MongoDB, Express, \u003cem\u003eReact\u003c/em\u003e, Node",
					"matchLevel": "full",
					"fullyHighlighted": false,
					"matchedWords": [ "reactjs" ]
				},
				"story_title": {
					"value": "Building Web Apps (MERN stack) in a matter of minutes for your Startup",
					"matchLevel": "none",
					"matchedWords": []
				}
			}
		}
	],
	"nbHits": 5573,
	"page": 0,
	"nbPages": 50,
	"hitsPerPage": 20,
	"exhaustiveNbHits": true,
	"exhaustiveTypo": true,
	"query": "reactjs",
	"params": "advancedSyntax=true\u0026analytics=true\u0026analyticsTags=backend\u0026query=reactjs",
	"processingTimeMS": 12
}
